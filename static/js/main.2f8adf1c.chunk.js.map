{"version":3,"sources":["api.js","components/Card.js","actions/hoursData.js","components/DetailsHours.js","components/Home.js","images/icon.png","components/Nav.js","actions/weatherData.js","components/GlobalStyle.js","App.js","reportWebVitals.js","reducers/weatherReducer.js","reducers/hoursReducer.js","reducers/index.js","index.js"],"names":["BASE_URL","forecast","process","searchedWeather","input_searched","StyledCard","styled","motion","div","Card","date","min","max","icon","hours","day","Date","getDay","dispatch","useSelector","state","dataHours","useDispatch","onClick","a","type","payload","hoursData","getHoursData","Math","floor","src","alt","CardShadow","Detail","DetailsHours","console","log","time","slice","map","text","temp_c","condition","HomeStyle","Home","forecastWeather","location","name","country","forecastday","mintemp_c","maxtemp_c","hour","current","date_epoch","StyledNav","nav","Logo","Nav","useState","searchCity","setSearchCity","iconImg","className","value","onChange","e","target","axios","get","timeout","results","searched","data","preventDefault","GlobalStyles","createGlobalStyle","App","useEffect","GlobalStyle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","dataWeather","action","rootReducers","combineReducers","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f8adf1c.chunk.js","sourcesContent":["const BASE_URL = \"http://api.weatherapi.com/v1/\";\n\nconst forecast =\n  BASE_URL + `forecast.json?key=${process.env.REACT_APP_WEATHER_API}&q=`;\n\nexport const forecastWeather = () => forecast;\n\nexport const searchedWeather = (input_searched) => {\n  return (\n    BASE_URL +\n    `forecast.json?key=${process.env.REACT_APP_WEATHER_API}&q=${input_searched}&days=3`\n  );\n};\n\n// const currentWeather =\n//   BASE_URL + `current.json?key=${process.env.REACT_APP_WEATHER_API}&q=`;\n\n// const searchAutocomplete =\n//   BASE_URL + `search.json?key=${process.env.REACT_APP_WEATHER_API}&q=`;\n\n// const history =\n//   BASE_URL + `history.json?key=${process.env.REACT_APP_WEATHER_API}&q=`;\n\n// const timeZone =\n//   BASE_URL + `timezone.json?key=${process.env.REACT_APP_WEATHER_API}&q=`;\n\n// const sports =\n//   BASE_URL + `sports.json?key=${process.env.REACT_APP_WEATHER_API}&q=`;\n\n// const astronomy =\n//   BASE_URL + `astronomy.json?key=${process.env.REACT_APP_WEATHER_API}&q=`;\n\n// const ipLookup =\n//   BASE_URL + `ip.json?key=${process.env.REACT_APP_WEATHER_API}&q=`;\n","import React from \"react\";\n\n// Import Styled\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\n\nimport { getHoursData } from \"../actions/hoursData\";\n\n// Import State\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst Card = ({ date, min, max, icon, hours }) => {\n  const weekday = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  const d = new Date(date);\n  const day = weekday[d.getDay()];\n\n  const { dataHours } = useSelector((state) => state.dataHours);\n\n  const dispatch = useDispatch();\n\n  const dayWeatherHandler = () => {\n    dispatch(getHoursData(hours));\n  };\n\n  return (\n    <StyledCard onClick={dayWeatherHandler}>\n      <h3>{day}</h3>\n      <h4>{date} </h4>\n      <p>Min temp: {Math.floor(min)} &#8451;</p>\n      <p>Max temp: {Math.floor(max)} &#8451;</p>\n      <img src={icon} alt=\"icon\" />\n    </StyledCard>\n  );\n};\n\nconst StyledCard = styled(motion.div)`\n  min-height: 30vh;\n  background: #8abcf9;\n  border-radius: 1rem;\n  font-size: 1.7rem;\n  text-align: center;\n  box-shadow: 5px 10px 18px rgba(0, 0, 0, 0.5);\n  transition: all 0.2s ease-in-out;\n  cursor: pointer;\n  p {\n    /* padding: 1rem 5rem; */\n    font-weight: 400;\n    font-size: 1.3rem;\n    line-height: 200%;\n  }\n  h3 {\n    padding: 1.5rem;\n    color: #fffb83;\n    font-size: 2rem;\n  }\n  h4 {\n    margin: 1rem 0rem;\n  }\n  img {\n    padding: 0rem 5rem;\n    width: 60%;\n  }\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport default Card;\n","export const getHoursData = (hours) => async (dispatch) => {\n  // const results = await axios.get(searchedWeather(input_searched));\n  // console.log(hours);\n  dispatch({\n    type: \"FETCH_HOURS\",\n    payload: {\n      hoursData: hours,\n    },\n  });\n};\n","import React from \"react\";\n\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\n\nimport { useSelector } from \"react-redux\";\n\nconst DetailsHours = () => {\n  // Data\n  const { dataHours } = useSelector((state) => state.dataHours);\n  console.log(dataHours);\n  return (\n    <CardShadow>\n      <Detail>\n        <h3>{dataHours && dataHours[0].time.slice(0, 10)}</h3>\n        {dataHours &&\n          dataHours.map((state) => (\n            <div>\n              <h3 key={state.text}>{state.time.slice(10)}</h3>\n              <p>{Math.floor(state.temp_c)} &#8451;</p>\n              <p>{state.condition.text}</p>\n              <img src={state.condition.icon} alt={state.condition.text} />\n            </div>\n          ))}\n      </Detail>\n    </CardShadow>\n  );\n};\n\nconst CardShadow = styled(motion.div)`\n  /* display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  grid-gap: 1rem 1rem; */\n  position: fixed;\n  overflow-y: scroll;\n  margin: 0;\n  width: 100%;\n  top: 0;\n  left: 0;\n  min-height: 100vh;\n  /* border-radius: 15px; */\n  background: rgba(0, 0, 0, 0.5);\n  /* color: white;\n  padding: 2rem;\n  padding-top: 5rem;\n  border: 3px solid #9a9a9a; */\n  /* div {\n    display: flex;\n    background: #6d6d6d;\n    width: 100%;\n    padding: 3px;\n    font-size: 0.7rem;\n    text-align: center;\n    align-items: center;\n    justify-content: space-between;\n    margin: 0;\n    img {\n      width: 30px;\n      height: 30px;\n    }\n  }\n  h2 {\n    width: 100%;\n    position: absolute;\n    color: white;\n    font-size: 2rem;\n    padding: 2rem;\n    margin: 0;\n    text-align: center;\n  } */\n  &::-webkit-scrollbar {\n    width: 0.5rem;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: white;\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: #90bfe8;\n    /* outline: 1px solid #ffffff; */\n  }\n`;\n\nconst Detail = styled(motion.div)`\n  width: 80%;\n  border-radius: 1rem;\n  padding: 2rem 20rem;\n  background: white;\n  position: absolute;\n  left: 10%;\n  color: black;\n  p {\n    color: black;\n  }\n`;\n\nexport default DetailsHours;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nimport DetailsHours from \"./DetailsHours\";\n\n// Import Animation\nimport { motion } from \"framer-motion\";\n\n// Import State\nimport { useSelector } from \"react-redux\";\n\n// Import Styled\nimport styled from \"styled-components\";\n\nconst Home = () => {\n  const { forecastWeather } = useSelector((state) => state.forecastWeather);\n  return (\n    <>\n      <h2>\n        Weather in {forecastWeather ? forecastWeather.location.name : \"\"}\n        {\", \"}\n        {forecastWeather ? forecastWeather.location.country : \"\"}\n      </h2>\n      <HomeStyle>\n        <DetailsHours />\n        {forecastWeather &&\n          forecastWeather.forecast.forecastday.map((state) => (\n            <Card\n              key={state.date_epoch}\n              date={state.date}\n              min={state.day.mintemp_c}\n              max={state.day.maxtemp_c}\n              hours={state.hour}\n              icon={forecastWeather.current.condition.icon}\n            />\n          ))}\n      </HomeStyle>\n    </>\n  );\n};\n\nconst HomeStyle = styled(motion.div)`\n  min-height: 80vh;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\n  grid-gap: 3rem 3rem;\n`;\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/icon.6dc21615.png\";","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { searchedData } from \"../actions/weatherData\";\n\n// Import Styled\nimport styled from \"styled-components\";\n\n//Import Image\nimport iconImg from \"../images/icon.png\";\n\nconst Nav = () => {\n  const dispatch = useDispatch();\n  const [searchCity, setSearchCity] = useState(\"\");\n  const inputHandler = (e) => {\n    setSearchCity(e.target.value);\n  };\n\n  const searchHandler = (e) => {\n    dispatch(searchedData(searchCity));\n    e.preventDefault();\n    setSearchCity(\"\");\n  };\n\n  return (\n    <StyledNav>\n      <Logo>\n        <img src={iconImg} alt=\"icon\" />\n        <h1>Weather App</h1>\n      </Logo>\n      <form className=\"search\">\n        <input value={searchCity} type=\"text\" onChange={inputHandler} />\n        <button onClick={searchHandler} type=\"submit\">\n          Search\n        </button>\n      </form>\n    </StyledNav>\n  );\n};\n\nconst StyledNav = styled.nav`\n  display: flex;\n  margin: 2rem 4rem;\n  padding: 2rem 0rem;\n  min-height: 10vh;\n  width: 90%;\n  align-items: center;\n\n  .search {\n    display: flex;\n    width: 30%;\n    input {\n      margin-right: 1rem;\n      box-shadow: 0px 0px 30px rgba(0, 0, 0, 0.2);\n      border: none;\n      padding: 0.3rem;\n      font-size: 1.5rem;\n    }\n    button {\n      border: none;\n      background: #ff7676;\n      border-radius: 0.3rem;\n      padding: 0.5rem 2rem;\n      color: white;\n      box-shadow: 0px 0px 30px rgba(0, 0, 0, 0.2);\n      cursor: pointer;\n    }\n    button:hover {\n      background: #ff6464;\n    }\n  }\n`;\n\nconst Logo = styled.nav`\n  display: flex;\n  img {\n    width: 10%;\n  }\n`;\n\nexport default Nav;\n","import axios from \"axios\";\nimport { forecastWeather, searchedWeather } from \"../api\";\n\nexport const weatherData = () => async (dispatch) => {\n  const results = await axios.get(`${forecastWeather()}Barcelona&days=3`, {\n    timeout: 3000,\n  });\n\n  dispatch({\n    type: \"FETCH_DATA\",\n    payload: {\n      forecastWeather: results.data,\n    },\n  });\n};\n\nexport const searchedData = (input_searched) => async (dispatch) => {\n  const results = await axios.get(searchedWeather(input_searched), {\n    timeout: 3000,\n  });\n\n  dispatch({\n    type: \"FETCH_SEARCHED\",\n    payload: {\n      searched: results.data,\n    },\n  });\n};\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyles = createGlobalStyle`\n*{\n    margin: 0rem 0.5rem;\n    padding: 0;\n    box-sizing: border-box;\n}\nbody {\n    font-family: 'Roboto', sans-serif;\n    width: 100%;\n}\nh1{\n    font-size: 4rem;\n    padding: 3rem 5rem;\n    justify-content: center;\n    font-weight: 400;\n    color: #333;\n}\nh2{\n    padding: 1rem 5rem;\n    margin: 4rem 0rem;\n    color: black;\n    font-size: 3rem;\n}\np{\n    color: white;\n}\na{\n    text-decoration: none;\n}\n\n`;\n\nexport default GlobalStyles;\n","import { React, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n// Import Actions\nimport { weatherData } from \"./actions/weatherData\";\n\nimport Home from \"./components/Home\";\nimport Nav from \"./components/Nav\";\n\n// Import Style\nimport GlobalStyles from \"./components/GlobalStyle\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(weatherData());\n  }, [dispatch]);\n\n  return (\n    <>\n      <GlobalStyles />\n      <Nav />\n      <Home />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initState = {\n  forecastWeather: null,\n  hoursData: null,\n};\n\nconst dataWeather = (state = initState, action) => {\n  // console.log(state.hoursData);\n  switch (action.type) {\n    case \"FETCH_DATA\":\n      return {\n        ...state,\n        forecastWeather: action.payload.forecastWeather,\n      };\n    case \"FETCH_SEARCHED\":\n      return {\n        ...state,\n        forecastWeather: action.payload.searched,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataWeather;\n","const initState = {\n  dataHours: null,\n};\n\nconst dataHours = (state = initState, action) => {\n  switch (action.type) {\n    case \"FETCH_HOURS\":\n      return {\n        ...state,\n        dataHours: action.payload.hoursData,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataHours;\n","import dataWeather from \"./weatherReducer\";\nimport dataHours from \"./hoursReducer\";\nimport { combineReducers } from \"redux\";\n\nconst rootReducers = combineReducers({\n  forecastWeather: dataWeather,\n  dataHours: dataHours,\n});\n\nexport default rootReducers;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducers from \"./reducers\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducers,\n  composeEnhancer(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}